on: push
name: Continuous Delivery 
jobs:
  buildNightlyDocker:
    name: Build x86 + ARM Nightly Docker Images
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Build Nightly Docker images
      run: |
        docker build -t difegue/lanraragi:nightly-x86 -f ./tools/DockerSetup/Dockerfile .
        docker run --rm --privileged multiarch/qemu-user-static:register --reset
        docker build -t difegue/lanraragi:nightly-armhf -f ./tools/DockerSetup/Dockerfile.arm .
    - name: Login and Push to Docker Hub
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker push difegue/lanraragi:nightly-x86
        docker push difegue/lanraragi:nightly-armhf
        docker manifest create difegue/lanraragi:nightly difegue/lanraragi:nightly-x86 \
          difegue/lanraragi:nightly-armhf
        docker manifest annotate difegue/lanraragi:nightly difegue/lanrarai:nightly-armhf --os linux --arch arm
        docker manifest push difegue/lanraragi:nightly
  buildNightlyWSL:
    name: Build Nightly Windows Package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Untagged Docker Build
      uses: actions/docker/cli@8cdf801b322af5f369e00d85e9cf3a7122f49108
      with:
        args: build -t difegue/lanraragi -f ./tools/DockerSetup/Dockerfile .
    - name: Build WSL zip
      uses: ./.github/action-wslbuild
    - name: Upload Installer to MEGA
      uses: difegue/action-megacmd@master
      env:
        PASSWORD: ${{ secrets.PASSWORD }}
        USERNAME: ${{ secrets.USERNAME }}
      with:
        args: put -c LANraragi_Windows_Installer.zip Windows_Nightlies/${GITHUB_SHA}/LRR_Nightly_Windows.zip
